# This is a basic workflow that is manually triggered

name: Automation workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  greet:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - name: Send greeting
      run: echo "Hello ${{ github.event.inputs.name }}"
  
  terry:
    runs-on: ubuntu-latest
    
    steps:
    # Runs a single command using the runners shell
    - name: test11
      run: echo "Hi ${{ github.event.inputs.name }}"

  login_to_intranet:

    runs-on: windows-latest
    
    steps:
    # Runs a single command using the runners shell

    - name: Git clone (checkout) main branch to current directory
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    # - name: Installed package list
    #   run: apt list --installed
    # - name: Remove Chrome
    #   run: sudo apt purge google-chrome-stable
    # - name: Remove default Chromium
    #   run: sudo apt purge chromium-browser
    # - name: Install a new Chromium
    #   run: sudo apt install -y chromium-browser
    - name: Install all necessary packages
      run: |
        pip install requests beautifulsoup4 pandas webdriver-manager selenium
        pip install packaging
      
    - name: Login to Intranet QA
      run: python3 CreateUser_intranet.py
